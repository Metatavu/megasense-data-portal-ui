/* tslint:disable */
/* eslint-disable */
/**
 * Megasense data portal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ExposureInstance
 */
export interface ExposureInstance {
    /**
     * 
     * @type {string}
     * @memberof ExposureInstance
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ExposureInstance
     */
    routeId?: string;
    /**
     * 
     * @type {Date}
     * @memberof ExposureInstance
     */
    startedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ExposureInstance
     */
    endedAt?: Date;
    /**
     * 
     * @type {number}
     * @memberof ExposureInstance
     */
    carbonMonoxide?: number;
    /**
     * 
     * @type {number}
     * @memberof ExposureInstance
     */
    nitrogenMonoxide?: number;
    /**
     * 
     * @type {number}
     * @memberof ExposureInstance
     */
    nitrogenDioxide?: number;
    /**
     * 
     * @type {number}
     * @memberof ExposureInstance
     */
    ozone?: number;
    /**
     * 
     * @type {number}
     * @memberof ExposureInstance
     */
    sulfurDioxide?: number;
    /**
     * 
     * @type {number}
     * @memberof ExposureInstance
     */
    harmfulMicroparticles?: number;
}

export function ExposureInstanceFromJSON(json: any): ExposureInstance {
    return ExposureInstanceFromJSONTyped(json, false);
}

export function ExposureInstanceFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExposureInstance {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'routeId': !exists(json, 'routeId') ? undefined : json['routeId'],
        'startedAt': !exists(json, 'startedAt') ? undefined : (new Date(json['startedAt'])),
        'endedAt': !exists(json, 'endedAt') ? undefined : (new Date(json['endedAt'])),
        'carbonMonoxide': !exists(json, 'carbonMonoxide') ? undefined : json['carbonMonoxide'],
        'nitrogenMonoxide': !exists(json, 'nitrogenMonoxide') ? undefined : json['nitrogenMonoxide'],
        'nitrogenDioxide': !exists(json, 'nitrogenDioxide') ? undefined : json['nitrogenDioxide'],
        'ozone': !exists(json, 'ozone') ? undefined : json['ozone'],
        'sulfurDioxide': !exists(json, 'sulfurDioxide') ? undefined : json['sulfurDioxide'],
        'harmfulMicroparticles': !exists(json, 'harmfulMicroparticles') ? undefined : json['harmfulMicroparticles'],
    };
}

export function ExposureInstanceToJSON(value?: ExposureInstance | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'routeId': value.routeId,
        'startedAt': value.startedAt === undefined ? undefined : (value.startedAt.toISOString()),
        'endedAt': value.endedAt === undefined ? undefined : (value.endedAt.toISOString()),
        'carbonMonoxide': value.carbonMonoxide,
        'nitrogenMonoxide': value.nitrogenMonoxide,
        'nitrogenDioxide': value.nitrogenDioxide,
        'ozone': value.ozone,
        'sulfurDioxide': value.sulfurDioxide,
        'harmfulMicroparticles': value.harmfulMicroparticles,
    };
}


